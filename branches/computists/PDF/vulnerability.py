'''
Created on 2012. 8. 19.

@author: Hong
'''
 
import re
import PyV8

jsVulns = ['mailto','Collab.collectEmailInfo','util.printf','getAnnots','getIcon','spell.customDictionaryOpen','media.newPlayer','doc.printSeps']
vulnsDict = {'/JBIG2Decode':['CVE-2009-0658'],'mailto':['CVE-2007-5020'],'Collab.collectEmailInfo':['CVE-2007-5659'],'util.printf':['CVE-2008-2992'],'getAnnots':['CVE-2009-1492'],'getIcon':'CVE-2009-0927','spell.customDictionaryOpen':['CVE-2009-1493'],'media.newPlayer':['CVE-2009-4324'],'doc.printSeps':['CVE-2010-4091'],'/U3D':['CVE-2009-3953','CVE-2009-3959','CVE-2011-2462'],'/PRC':['CVE-2011-4369']}




def findVul(content):
    vulns = []
    for jsVuln in jsVulns :
            vulnsSyntax = re.findall('\s*?'+jsVuln+'\S*;',content)
            if vulnsSyntax != [] :
                for i in vulnsSyntax :
                    vulns.append([vulnsDict[jsVuln],i])
            
                print("[*] vulnerable syntax Found\n")
                
    return (vulns)
        
"""def getParameter(contents, vuln):
    contents = contents.split("\n")
    js_Contexts = []
    parameter = re.findall('\(.*\)',vuln)
    if parameter != [] :
        param = parameter[0].strip('(').rstrip(')')
        count = 0
        for content in contents :
            #js_Context have to enhanced!!!
            js_Context = content.find(param)
            if js_Context == -1 :
                js_Context = content.find("unescape")
            else :
                if content.find(vuln) != -1 :
                    js_Context = -1
            
            if js_Context != -1 :
                js_Contexts.append([count,content])
                
            count += 1
        js_Contexts.sort()
        jsScript = ""
        for i in js_Contexts :
            jsScript += i[1]+"\n"
        
        ct = PyV8.JSContext()
        ct.enter()
        result = ct.eval(jsScript)
        return result    
        
    else :
        print("can't find any parameter\n")
        return False"""

def getParameter(contents, vuln):
    contents = contents.split("\n")
    js_Contexts = []
    parameter = re.findall('\(.*\)',vuln)
    if parameter != [] :
        param = parameter[0].strip('(').rstrip(')')
        count = 0
        for content in contents :
            #js_Context have to enhanced!!!
            js_Context = content
            if content.find(vuln) != -1 :
                js_Context = -1
            
            if js_Context != -1 :
                js_Contexts.append([count,content])
                
            count += 1
        js_Contexts.sort()
        jsScript = ""
        for i in js_Contexts :
            jsScript += i[1]+"\n"
        
        ct = PyV8.JSContext()
        ct.enter()
        result = ct.eval(jsScript)
        return result    
        
    else :
        print("can't find any parameter\n")
        return False

def CVE_2009_0927(content, vuln) :
    param = getParameter(content, vuln[1])
    if param == False :
        print("error in vulnerability")
        return False
    params = param.split(".")
    if (len(params[0]) > 0x100 or len(params[1]) > 0x100) or len(param) > 0x200 :
        print("[*] This File has malicious javascript!")
        print("\t[&] CVE Number : CVE-2009-0927")
        print("\t[&] Script : "+vuln[1])
        print("\t[&] Parameter length : %s Bytes\n" %len(param))
    else :
        print("[*] Suspicious syntax")
        print("\t[&] Script : "+vuln[1]+'\n')
    
def vulnerability(content):
    vulns = findVul(content)
    if vulns != [] :
        for vuln in vulns :
            if vuln[0] == "CVE-2009-0927" :
                CVE_2009_0927(content, vuln)
                
                
            
            
        
        